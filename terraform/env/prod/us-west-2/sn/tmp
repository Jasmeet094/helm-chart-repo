
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # module.shard_env.aws_security_group.db[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "db" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "sn DB SG"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "sn_db"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = true
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-0b10526e"
    }

[1m  # module.shard_env.aws_security_group.lb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "lb" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "sn LB SG"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "snlb"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = true
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "ELB-sn"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "ELB-sn"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-0b10526e"
    }

[1m  # module.shard_env.aws_security_group.web[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "web" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "sn Web SG"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "sn_web"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = true
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-0b10526e"
    }

[1m  # module.shard_env.aws_security_group_rule.db-e-http-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "db-e-http-t" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "http outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 80
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 80
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.db-e-https-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "db-e-https-t" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "https outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.db-e-ntp-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "db-e-ntp-t" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "ntp outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 123
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 123
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.db-e-ntp-u[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "db-e-ntp-u" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "ntp outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 123
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "udp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 123
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.db-e-self[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "db-e-self" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "all outbound to itself"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.db-i-db-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "db-i-db-t" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "postgres inbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 6432
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 6432
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.shard_env.aws_security_group_rule.db-i-mongo-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "db-i-mongo-t" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "mongo inbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 27027
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 27027
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.shard_env.aws_security_group_rule.db-i-self[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "db-i-self" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "all outbound to itself"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.shard_env.aws_security_group_rule.lb-e-http-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "lb-e-http-t" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "http to web"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 80
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 80
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.lb-e-https-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "lb-e-https-t" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "https to web"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.lb-i-http-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "lb-i-http-t" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "http inbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 80
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 80
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.shard_env.aws_security_group_rule.lb-i-https-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "lb-i-https-t" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "https inbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-e-db-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-e-db-t" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "postgres outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 6432
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 6432
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-e-http-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-e-http-t" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "http outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 80
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 80
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-e-https-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-e-https-t" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "https outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-e-mongo-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-e-mongo-t" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "mongo outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 27027
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 27027
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-e-ntp-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-e-ntp-t" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "ntp outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 123
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 123
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-e-ntp-u[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-e-ntp-u" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "ntp outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 123
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "udp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 123
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-e-self[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-e-self" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "all outbound to itself"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-i-http-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-i-http-t" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "http to web"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 80
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 80
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-i-https-t[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-i-https-t" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "https to web"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.shard_env.aws_security_group_rule.web-i-self[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "web-i-self" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "all outbound to itself"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.shards["log"].aws_eip.eip_db[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "eip_db" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogdb1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogdb1"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # module.shards["log"].aws_eip.eip_web[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "eip_web" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogw1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogw1"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # module.shards["log"].aws_instance.db[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "db" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0a21eb8194894d88b"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = "DBServer"
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.large"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = "MHC-Matt"
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = "subnet-c48e20a0"
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogdb1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogdb1"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = "fd792111ed5d274394d5932d1e00805b48d975ad"
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                          = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogdb1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.shards["log"].aws_instance.web[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "web" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0a1b477074e2f1708"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = "WebServer"
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.large"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = "MHC-Matt"
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = "subnet-c48e20a0"
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogw1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogw1"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = "d1f4e2d17139d34005d1bbd79d7d17291bda4c10"
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                          = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "snlogw1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.shards["log"].aws_route53_record.dbpvt[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route53_record" "dbpvt" {
      [32m+[0m [0m[1m[0mallow_overwrite[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mfqdn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m            = "snlogdb1pvt"
      [32m+[0m [0m[1m[0mrecords[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mttl[0m[0m             = 300
      [32m+[0m [0m[1m[0mtype[0m[0m            = "A"
      [32m+[0m [0m[1m[0mzone_id[0m[0m         = "Z2IX59JMXPQ6BD"
    }

[1m  # module.shards["log"].aws_route53_record.webpvt[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route53_record" "webpvt" {
      [32m+[0m [0m[1m[0mallow_overwrite[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mfqdn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m            = "snlogw1pvt"
      [32m+[0m [0m[1m[0mrecords[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mttl[0m[0m             = 300
      [32m+[0m [0m[1m[0mtype[0m[0m            = "A"
      [32m+[0m [0m[1m[0mzone_id[0m[0m         = "Z2IX59JMXPQ6BD"
    }

[1m  # module.shards["s01"].aws_eip.eip_db[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "eip_db" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01db1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01db1"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # module.shards["s01"].aws_eip.eip_web[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "eip_web" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01w1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01w1"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # module.shards["s01"].aws_instance.db[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "db" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "aami-05be95119101919f6"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = "DBServer"
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.large"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = "MHC-Matt"
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = "subnet-c48e20a0"
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01db1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01db1"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = "b1e8d55759fe2471d19797af9e00afd8755a3604"
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                          = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01db1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Database"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.shards["s01"].aws_instance.web[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "web" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0a1b477074e2f1708"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = "WebServer"
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.large"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = "MHC-Matt"
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecondary_private_ips[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m                    = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = "subnet-c48e20a0"
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01w1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01w1"
          [32m+[0m [0m"Operations"         = (known after apply)
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = "df89b15cd235f6b29bf0f76824be35957839c1e4"
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                          = {
          [32m+[0m [0m"Ansible"            = "True"
          [32m+[0m [0m"Environment"        = "sn"
          [32m+[0m [0m"Name"               = "sns01w1"
          [32m+[0m [0m"Operations"         = ""
          [32m+[0m [0m"Role"               = "Admin"
          [32m+[0m [0m"Terraform"          = "True"
          [32m+[0m [0m"mhc-nonprod-backup" = "true"
        }
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mcapacity_reservation_specification {
          [32m+[0m [0m[1m[0mcapacity_reservation_preference[0m[0m = (known after apply)

          [32m+[0m [0mcapacity_reservation_target {
              [32m+[0m [0m[1m[0mcapacity_reservation_id[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0menclave_options {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mthroughput[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.shards["s01"].aws_route53_record.dbpvt[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route53_record" "dbpvt" {
      [32m+[0m [0m[1m[0mallow_overwrite[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mfqdn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m            = "sns01db1pvt"
      [32m+[0m [0m[1m[0mrecords[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mttl[0m[0m             = 300
      [32m+[0m [0m[1m[0mtype[0m[0m            = "A"
      [32m+[0m [0m[1m[0mzone_id[0m[0m         = "Z2IX59JMXPQ6BD"
    }

[1m  # module.shards["s01"].aws_route53_record.webpvt[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route53_record" "webpvt" {
      [32m+[0m [0m[1m[0mallow_overwrite[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mfqdn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m            = "sns01w1pvt"
      [32m+[0m [0m[1m[0mrecords[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mttl[0m[0m             = 300
      [32m+[0m [0m[1m[0mtype[0m[0m            = "A"
      [32m+[0m [0m[1m[0mzone_id[0m[0m         = "Z2IX59JMXPQ6BD"
    }

[0m[1mPlan:[0m 37 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
