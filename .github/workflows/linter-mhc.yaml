---
name: Lint-Code-Base -MHC-TEST

on:
  push:
  pull_request:
    branches: [main]

jobs:
  get_changed_files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.get_changed_files.outputs.changed_files }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Changed Files
        id: get_changed_files
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            const changedFiles = execSync('git diff --name-only ${{ github.event.before }} ${{ github.sha }}').toString().trim().split('\n').filter(file => file);
            return JSON.stringify(changedFiles);

  super-linter:
    name: Super Linter
    needs: get_changed_files
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Environment Variables for Changed Files
        run: |
          echo "CHANGED_FILES=$(echo '${{ needs.get_changed_files.outputs.changed_files }}' | jq -r '.[]')" >> $GITHUB_ENV

      - name: Lint Changed Files
        uses: github/super-linter@v6
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: ${{ env.CHANGED_FILES }}
          #VALIDATE_BASH_EXEC: true
          VALIDATE_ANSIBLE: false
          # disable all python linters
          # ruff is taking care of this
          VALIDATE_PYTHON: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_PYTHON_PYLINT: false
          # sql fluff is a sql smeller written in Python, and "You must configure a dialect or
          # specify one on the command line". Since there is no environment variable to set one on
          # the command line, that means you need a configuration file (pyproject.toml by default)
          # just to be able to use it.
          VALIDATE_SQLFLUFF: false
          VALIDATE_JSCPD: false 
          VALIDATE_CHECKOV: false 
          VALIDATE_GO: false

  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    needs: get_changed_files
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install ansible-lint
        run: pip install ansible ansible-lint

      - name: Run ansible-lint on changed files
        run: |
          CHANGED_FILES=$(echo '${{ needs.get_changed_files.outputs.changed_files }}' | jq -r '.[]')
          for file in $CHANGED_FILES; do
            if [[ $file == *.yml || $file == *.yaml ]]; then
              ansible-lint $file
            fi
          done

  ruff:
    name: Ruff Lint
    runs-on: ubuntu-latest
    needs: get_changed_files
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Ruff check
        uses: chartboost/ruff-action@v1